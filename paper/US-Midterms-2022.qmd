---
title: "Higher Information and Higher Trust in Government ..."
subtitle: "My subtitle if needed"
author: 
  - Talia Fabregas
thanks: "Code and data are available at: [https://github.com/taliafabs/US-Midterms-2022.git](https://github.com/taliafabs/US-Midterms-2022.git)."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence. Key Trump 2024 voting blocs, including young men without a college education were less likely to vote in the 2022 midterms when he was not on the ballot compared to 2020"
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| echo: false
#| warning: false
#| message: false

library(tidyverse)
library(janitor)
library(dplyr)
library(ggplot2)
library(arrow)
library(rstanarm)
library(modelsummary)
library(kableExtra)
library(RColorBrewer)

# load the analysis data
setwd(here::here())
ces2022_analysis_data <- read_parquet("data/02-analysis_data/ces2022_analysis_data.parquet")
```

# Introduction

Overview paragraph

Estimand paragraph

Results paragraph

Why it matters paragraph In the 2024 election, Democratic Senate candidates (both incumbent and non-incumbent) were elected in states that President-Elect Trump carried: Michigan, Wisconsin, Nevada, and Arizona. In Nevada and Wisconsin, Senators Jackie Rosen and Tammy Baldwin

Telegraphing paragraph: The remainder of this paper is structured as follows. @sec-data....

# Data {#sec-data}

## Overview

We use the statistical programming language R [@citeR].... Our data [@ces2022].... Following @tswd, we consider...

Overview text

## Measurement

Some paragraphs about how we go from a phenomena in the world to an entry in the dataset.

## Outcome variables

Add graphs, tables and text. Use sub-sub-headings for each outcome variable or update the subheading to be singular.

Some of our data is of penguins (@fig-fig1), from ...

```{r}
#| echo: false
#| message: false
#| warning: false
#| eval: true
#| label: tbl-table1
#| tbl-cap: Biden 2020 Voters Voted in 2022 midterms slightly more than Trump 2020 voters. 73.26% of respondents who voted for Trump in 2020 voted in 2022, compared to 74.67% of respondents who voted for Biden.

turnout_by_preference <- ces2022_analysis_data %>%
  group_by(presvote2020) %>%
  summarise(
    total_respondents = n(),                     # Total number of respondents
    num_voted = sum(voted_in_2022),              # Total number that voted
    .groups = "drop"                             # Ensure the result is ungrouped
  ) %>%
  mutate(
    pct_voted = round(100*(sum(common_weight)/total_respondents),2)
  )

kable(turnout_by_preference)
```

```{r}
#| label: fig-fig1
#| fig-cap: Figure 1!!!
#| echo: false
#| warning: false
#| message: false

# graph the percentage of 2020 voters who also voted in 2022
# age_data <- ces2022_analysis_data %>%
#   group_by(age_bracket, presvote2020) %>%
#   num_voted = (sum(voted_in_2022))
  # summarise(n = sum(voted_in_2022)) %>%
  # mutate(turnout = n / sum(n))

# age_data <- ces2022_analysis_data %>%
#   group_by(age_bracket, presvote2020) %>%
#   summarise(
#     total_respondents = n(),                     # Total number of respondents
#     num_voted = sum(voted_in_2022),              # Total number that voted
#     .groups = "drop"                             # Ensure the result is ungrouped
#   ) %>%
#   mutate(
#     pct_voted = round(100*(num_voted/total_respondents),2)
#   )
# 
# 
# ggplot(age_data, aes(x = age_bracket, fill = presvote2020)) +
#   geom_bar(aes(y = total_respondents, group = presvote2020), 
#            stat = "identity", position = "dodge", alpha = 0.5) +
#   geom_bar(aes(y = num_voted, group = presvote2020), 
#            stat = "identity", position = "dodge",  alpha = 1) +
#   # scale_fill_manual(values = c("Joe Biden" = "blue", "Donald Trump" = "red")) +
#   scale_fill_brewer(palette = "Set1") +
#   labs(
#     title = "Lower Turnout Across All Age Brackets and Vote Preferences in 2022",
#     x = "Age Bracket",
#     y = "Number of Respondents",
#     fill = "2020 Vote"
#   ) +
#   coord_flip() +
#   theme_minimal() +
#   theme(
#     legend.position = "top",
#     axis.text.x = element_text(angle = 45, hjust = 1)
#   )

# Graph the percentage of 2020 voters who also voted in 2022

age_data <- ces2022_analysis_data %>%
  group_by(age_bracket, presvote2020) %>%
  summarise(
    total_respondents = n(),                     # Total number of respondents
    num_voted = sum(voted_in_2022),              # Total number that voted
    .groups = "drop"                             # Ensure the result is ungrouped
  ) %>%
  mutate(
    pct_voted = round(100*(num_voted/total_respondents),2)
  )

# Plotting the graph
# Graph the percentage of 2020 voters who also voted in 2022

age_data <- ces2022_analysis_data %>%
  group_by(age_bracket, presvote2020) %>%
  summarise(
    total_respondents = n(),                     # Total number of respondents
    num_voted = sum(voted_in_2022),              # Total number that voted
    .groups = "drop"                             # Ensure the result is ungrouped
  ) %>%
  mutate(
    pct_voted = round(100*(num_voted/total_respondents),2)
  )

# Plotting the graph
ggplot(age_data, aes(x = age_bracket, fill = presvote2020)) +
  geom_bar(aes(y = total_respondents, group = presvote2020), 
           stat = "identity", position = "dodge", alpha = 0.5) +  # Lower alpha for non-voters
  geom_bar(aes(y = num_voted, group = presvote2020), 
           stat = "identity", position = "dodge",  alpha = 1) +  # Higher alpha for voters
  scale_fill_manual(
    values = c("Joe Biden" = "blue", "Donald Trump" = "red"),
    name = "2020 Vote Preference",
    breaks = c("Joe Biden", "Donald Trump"),
    labels = c("Joe Biden", "Donald Trump")
  ) +
  labs(
    title = "Lower Turnout Across All Age Brackets and Vote Preferences in 2022 than 2020",
    x = "Age Bracket",
    y = "Number of Respondents"
  ) +
  coord_flip() +
  theme_minimal() +
  theme(
    legend.position = "top",
    axis.text.x = element_text(angle = 45, hjust = 1)
  ) +
  scale_alpha_manual(
    values = c(0.5, 1),
    name = "Voter Turnout",
    labels = c("Did Not Vote in 2022", "Voted in 2022")
  )


```

```{r}
# trust in the federal government
interest_data <- ces2022_analysis_data %>%
  group_by(political_interest, presvote2020) %>%
  summarise(
    total_respondents = n(),                     # Total number of respondents
    num_voted = sum(voted_in_2022),              # Total number that voted
    .groups = "drop"                             # Ensure the result is ungrouped
  ) %>%
  mutate(
    pct_voted = round(100*(num_voted/total_respondents),2),
    prop_voted = round(num_voted/total_respondents, 2)
  )

interest_data <- interest_data %>%
  mutate(political_interest = factor(political_interest, 
                                     levels = c("No", "Hardly at all", "Only now and then", "Some of the time", "Most of the time")))


ggplot(interest_data, aes(x = political_interest, y = prop_voted, fill = presvote2020)) +
  geom_bar(stat = "identity", position = "dodge", width = 0.7) +  # Use dodge position for side-by-side bars
 scale_fill_brewer(palette = "Set1") + # Customize colors for Biden and Trump
  coord_flip() +
  labs(
    title = "2020 Voters with Lower Political Interest Less Likely to Vote in 2022",
    x = "Political Interest",
    y = "% of 2020 Voters who Voted in 2022 Midterms",
    fill = "2020 Presidential Vote"
  ) +
  # scale_y_continuous(labels = scales::percent, limits = c(0, 100)) +  # Set the scale from 0% to 100%
  theme_minimal() +  # Clean minimal theme
  theme(
    legend.position = "right",  # Move the legend to the top
    axis.text.x = element_text(angle = 45, hjust = 1),  # Rotate x-axis labels for better readability
    plot.title = element_text(size = 12)  # Adjust the title font size
  )
```
```{r}
trust_data <- ces2022_analysis_data %>%
  group_by(know_us_house) %>%
  summarise(
    total_respondents = n(),                     # Total number of respondents
    num_voted = sum(voted_in_2022),              # Total number that voted
    .groups = "drop"                             # Ensure the result is ungrouped
  ) %>%
  mutate(
    pct_voted = round(100*(num_voted/total_respondents),2),
    prop_voted = round(num_voted/total_respondents, 2)
  )

trust_data
```

```{r}
# Trust among Trump and Biden voters
trust_data_by_candidate <- ces2022_analysis_data %>%
  group_by(trustfed, presvote2020) %>%
  summarise(
    total_respondents = n(),                    
    .groups = "drop"                            
  ) 

trust_data_by_candidate$trustfed <- factor(trust_data_by_candidate$trustfed, 
                                           levels = rev(c("A great deal", "A fair amount", "Not very much", "None at all")))

ggplot(trust_data_by_candidate, aes(x = trustfed, y = total_respondents, fill = presvote2020)) +
  geom_bar(stat = "identity", position = "dodge") +   # Position bars side by side
  labs(
    title = "Low Trust in Government Associated with Support for Trump",
    x = "Trust in Federal Government",
    y = "Total Number of Respondents",
    fill = "2020 Presidential Vote"
  ) +
 scale_fill_brewer(palette = "Set1") + 
  theme_minimal() +
  theme(
    legend.position = "right",          # Position legend on top
    axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis text for readability
  ) +
  coord_flip()
```
Talk more about it.

Talk way more about it.

## Predictor variables

Add graphs, tables and text.

Use sub-sub-headings for each outcome variable and feel free to combine a few into one if they go together naturally.

# Model

The goal of my modeling strategy is twofold. Firstly, I want to The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.

```{=tex}
\begin{align} 
y_i | \pi_i &\sim \mbox{Bern}(\pi_i) \\
\mbox{logit}(\pi_i) &= \beta_0 + \beta_1 \times presvote2020_i + \beta_2 \times educ_i + \beta_3 \times trust_i + \beta_4 \times know\_us\_house_i \\
&+ \beta_5 \times know\_us\_senate_i + \beta_6 \times political\_interest_i  \\
\beta_0 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_1 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_2 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_3 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_4 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_5 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_6 &\sim ~ \mbox{Normal}(0, 2.5) \\
\end{align}
```

```{=tex}
\begin{align} 
y_i | \pi_i &\sim \mbox{Bern}(\pi_i) \\
\mbox{logit}(\pi_i) &= \beta_0 + \beta_1 \times presvote2020_i + \beta_2 \times educ_i + \beta_3 \times trust_i + \beta_4 \times know\_us\_house_i \\
&+ \beta_5 \times know\_us\_senate_i + \beta_6 \times political\_interest_i  \\
\beta_0 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_1 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_2 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_3 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_4 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_5 &\sim ~ \mbox{Normal}(0, 2.5) \\
\beta_6 &\sim ~ \mbox{Normal}(0, 2.5) \\
\end{align}
```
We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.

### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.

## Model Weaknesses and Limitations

Trained using a random subset of the data. Refer to codebook about the risks of that.

# Results

The results are summarized in [Appendix -@sec-model-results].

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

turnout_model_2022 <-
  readRDS(file = here::here("models/turnout_model_2022.rds"))

vote_preference_model <- 
  readRDS(file = here::here("models/political_preference_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

# # apply the model to predict who would vote in 2022
# who_voted <- ces2022_analysis_data %>%
#   group_by(voted_in_2022, presvote2020, age_bracket, educ, truststate, trustfed, 
#          know_us_house, know_us_senate, political_interest) %>%
#   summarise(n = n()) %>%
#   ungroup() 
# 
# # maybe look at young men, no collegee education, little trust, low informaton, low political interest and their support for trump and turnout when he was and was not on the ballot
# 
# # apply model to the analysis data
# # use predict function to predict the probability that each voter will vote based on characteristics
# new_voter_data <- ces2022_analysis_data
# new_voter_data$predicted_prob <- predict(turnout_model_2022, newdata = new_voter_data, type = "response")
# 
# model_results <- new_voter_data |>
#   select(predicted_prob, voted_in_2022, presvote2020, age_bracket, educ,
#          truststate, trustfed, know_us_house, know_us_senate, political_interest)
# 
# # pretty good at classifying 18-29 year old trump voters who did not vote in midterms correctly
# model_results_by_group <- model_results %>%
#   group_by(voted_in_2022, presvote2020, age_bracket, educ, truststate, trustfed, 
#          know_us_house, know_us_senate, political_interest) %>%
#   summarise(avg_prob = mean(predicted_prob))
# 
# # things associated with support for trump are alsoa ssocia
```

```{r}
vote_preferences <- ces2022_analysis_data %>%
  group_by(age_bracket, gender, race, educ, trustfed, know_us_house) %>%
  summarise(trump_prop = mean(voted_for_trump))
```

## Low Propensity Trump Voters are Less Likely to Vote in Midterms

## Voters with Little Interest in Politics are Less Likely to Vote in Midterms

## College Education is Associated with Higher Support for the Democratic Party and Higher Likelihood to Vote in Midterms

## Young men are more likely to support Trump and less likely to vote when he is not on the ballot

# Discussion

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this.

## Second discussion point

Please don't use these as sub-heading labels - change them to be what your point actually is.

## Polling Misses and Trump's Unique Appeal to Low Propensity Voters
Young men who are not college-educated, do not know which party controls the U.S. House of Representatives, 

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {.unnumbered}

# Surveys, Sampling, and Observational Data

## Deep Dive into CES Methodology

### Sampling Method

### Weighting

### Verification

### Weaknesses and Limitations

## Second Point: Idealized Survey Methodology to Study 2024 Down-Ballot Voter Attrition

## Social Desirability Bias and Identifying Non-Voters

# Additional data details

## Data cleaning

# Model details {#sec-model-details}

## Model Results {#sec-model-results}

The model summary is shown in @tbl-model-summary.

```{r}
#| echo: false
#| eval: true
#| label: tbl-model-summary
#| tbl-cap: "Explanatory model of voter turnout in 2022 U.S. midterm elections based on ..."
#| warning: false

modelsummary::modelsummary(
  list(
    "Voter Turnout Model" = turnout_model_2022
  ),
  statistic = "mad",
  fmt = 2,
  output = "kableExtra"
) %>%
  kableExtra::kable_styling(font_size = 11)
```

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows the comparison of the outcome variable $vote\_2022$, with simulations from the posterior distribution [@tswd].

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows...

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

# pp_check(turnout_model_2022) +
#   theme_classic() +
#   theme(legend.position = "bottom")
# 
# posterior_vs_prior(turnout_model_2022) +
#   theme_minimal() +
#   scale_color_brewer(palette = "Set1") +
#   theme(legend.position = "bottom") +
#   coord_flip()
```

## Credibility Intervals

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false
#| label: fig-credibilityintervals
#| fig-cap: Credible intervals for predictors of voter turnout in the 2022 U.S. midterm elections

modelplot(turnout_model_2022, conf_level = 0.95) +
  labs(x = "95 per cent credibility interval")

```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(turnout_model_2022, "trace")

plot(turnout_model_2022, "rhat")
```

\newpage

# References
